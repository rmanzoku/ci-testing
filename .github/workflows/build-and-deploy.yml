name: build and deploy

on:
  push:
    paths:
      - ".github/workflows/build-and-deploy.yml"
      - go/**

env:
    APP_NAME: "oaw-sand-aurora_batch"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          cache: true
          cache-dependency-path: go/go.sum
          go-version-file: go/go.mod

      - name: Install dependencies
        working-directory: go
        run: go mod download

      - name: Build
        working-directory: go/cmd/container
        run: go build  -ldflags "-w -s" -o handler

  push-to-ecr:

    if : >-
      github.ref_name == 'main'

    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}

      - uses: docker/setup-buildx-action@v1

      # 827451556797.dkr.ecr.ap-northeast-1.amazonaws.com/oaw-sand-aurora_batch
      - name: Set env (develop)
        if: github.ref_name == 'main'
        run: |
          echo "ENV=dev" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=827451556797" >> $GITHUB_ENV
          echo "ECR_REGISTRY=827451556797.dkr.ecr.ap-northeast-1.amazonaws.com" >> $GITHUB_ENV
          echo "ECR_REPOS=oaw-sand-aurora_batch" >> $GITHUB_ENV
          echo "IAM_ROLE=oaw-sand-github-actions" >> $GITHUB_ENV

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.IAM_ROLE }}
          role-session-name: ${{ env.IAM_ROLE }}

      - uses: docker/login-action@v2
        with:
          registry: ${{ env.ECR_REGISTRY }}

      - name: Set image tag
        run: |
          COMMITID=$(git rev-parse --short ${{ github.sha }})
          echo "DOCKER_TAG=grpc-${COMMITID}" >> $GITHUB_ENV

      - name: Push to ECR
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./go/cmd/container
          file: ./go/cmd/container/Dockerfile
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOS }}:${{ env.DOCKER_TAG }}
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOS }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
